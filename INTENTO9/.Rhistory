pred.data <- data.frame(fecha,conteo_ordenes)
rownames(pred.data) <- NULL
write.table(pred.data, file = "pred_Urdaneta_6.csv", sep = ",",qmethod = "double",row.names = FALSE)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
library(LogicReg)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
## Comparar la predicción en nuestro conjunto de entrenamiento en el dataset de prueba.
pred <- predict(modFit, Test)
# agregar predicción al dataset
predict_test <- Test
predict_test$pred <- pred
# graficar la predicción, colorear por año.
ggplot(predict_test) + geom_point(aes(fecha,pred))
fecha <- Test$fecha
conteo_ordenes <- as.integer(predict_test$pred)
pred.data <- data.frame(fecha,conteo_ordenes)
rownames(pred.data) <- NULL
write.table(pred.data, file = "pred_Urdaneta_7.csv", sep = ",",qmethod = "double",row.names = FALSE)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO6/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
Training$conte_tempm <- Training$conteo_restaurantes*Training$temp_min
Test$conte_tempm <- Test$conteo_restaurantes*Test$temp_min
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+conte_tempm+eventos_cod,data=Training)
summary(relevancia)
## plantear el modelo usando train de caret usando el metodo robust lineal model
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
## imprimir los parámetros del modelo final
print(modFit)
library(lmtest)
install.packages(lmtest)
install.packages(zoo)
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO9/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO9/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
#Descripcion de variables
#Col 2. cod_calendario: variable binaria que determina un evento especial dentro del calendario
#Col 3. conteo_ordenes: Variable numerica que indica el numero de pedidos (Variable que se espera estimar)
#Col 4. conteo_restaurantes: Variable numerica que indica el numero de restaurantes
#Col 5. temp_max:
#Col 6. temp_min:
#Col 7. precipitacion:
#Col 9. eventos_cod: Variable categorica que indica tiempo climatico. Toma el valor de:
#1- Ninguno
#2- Lluvia
#3- Niebla
#4- Nieve
#5- Lluvia-Nieve
#6- Lluvia_Niebla
#7- Lluvia -Tormenta
#8- Niebla-Lluvia-Nieve
#9- Niebla-Nieve
## Ajustemos un de regresión lineal múltiple!
## $$ conteo_ordenes = B_0 + B_1 cod_calendario + B_2 conteo_restaurantes + B_3 temp_max + B_4 temp_min + B_5 precipitacion + B_6 eventos_cod $$
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
#Relvancia de los parametros, usando la tabla ANOVA - analisis de la varianza, para definir que todos los Betas sean relevantes de lo contrario se incurre en el problema de variable redundante o tal vez se pueda incurrir en el problema de variable omitida que incurre a su vez en un problema de estimadores sesgados, inconsistentes e ineficientes, Este tipo de estimadores no resultan buenos estimadores generando una mala estimacion del y (Yhat)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
summary(relevancia)
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
ramsey(modFit)
resettest(modFit)
install.packages(fRegression)
install.packages(RegressionTestsInterface)
install.packages(“quantreg”)
install.packages(quantreg)
install.packages("fRegression")
resettest(modFit)
library("fRegression", lib.loc="~/R/win-library/3.2")
resettest(modFit)
reset(modFit)
resetTest(modFit)
resetTest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
install.packages("lmtest")
library(lmtest)
petest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+log(eventos_cod),data=Training)
install.packages("Rsolnp")
install.packages("spdep")
LMtest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
lm.LMtest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
modelo<-lm(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
modelo.LMtest()
library(spdep)
LMtest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
modelo<- lm(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
lm.LMtest(modelo)
res <- lm.LMtests(modelo, nb2listw(COL.nb), test=c("LMerr", "LMlag",
res <- lm.LMtests(modelo, nb2listw(COL.nb), test=c("LMerr", "LMlag","RLMerr", "RLMlag", "SARMA"))
res <- lm.LMtests(modelo, nb2listw(COL.nb), test=c("LMerr", "LMlag","RLMerr", "RLMlag", "SARMA"))
res <- lm.LMtests(modelo, nb2listw(COL.nb), test=c("LMerr", "LMlag","RLMerr", "RLMlag", "SARMA"))
summary(res))
summary(res)
res <- lm.LMtests(modelo, test=c("LMerr", "LMlag","RLMerr", "RLMlag", "SARMA"))
res <- lm.LMtests(modelo, nb2listw(COL.nb),test=c("LMerr", "LMlag","RLMerr", "RLMlag", "SARMA"))
library(ggplot2)
library(caret)
library(plyr)
library(kernlab)
library(fRegression)
#Leer los datos de training y test
Training <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO9/training_set.csv")
Test <- read.csv("C:/Users/Paz U/Desktop/CM20151HW8_URDANETA/INTENTO9/test_set.csv")
Training$eventos_cod <- revalue(Training$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
Test$eventos_cod <- revalue(Test$eventos, c("Ninguno"="1", "Lluvia"="2","Niebla"="3","Nieve"="4","Lluvia-Nieve"="5","Niebla-Lluvia"="6","Lluvia-Tormenta"="7","Niebla-Lluvia-Nieve"="8","Niebla-Nieve"="9"))
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temp_max,data=Training)
Training$conte_temp <- Training$conteo_restaurantes*Training$temp_max
Test$conte_temp <- Test$conteo_restaurantes*Test$temp_max
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temp_max,data=Training)
summary(relevancia)
Training$temptemp <- Training$temp_min*Training$temp_max
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+,data=Training)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- Training$conteo_restaurantes*Training$temp_min
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
summary(relevancia)
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- Training$conteo_restaurantes*Training$eventos_cod
Training$temptemp <- Training$conteo_restaurantes*Training$cod_calendario
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- (Training$temp_max+Training$temp_min)/2
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- Training$temp_max+Training$temp_max
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- Training$conteo_restaurantes+Training$conteo_restaurantes
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
resetTest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
Training$temptemp <- Training$conteo_restaurantes*Training$conteo_restaurantes
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
Training$temptemp <- (Training$conteo_restaurantes)**2
relevancia <- aov(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
summary(relevancia)
resetTest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
resetTest(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,data=Training)
modelo<- lm(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,data=Training)
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod,method = "rlm",data=Training)
print(modFit)
pred <- predict(modFit, Test)
predict_test <- Test
ggplot(predict_test) + geom_point(aes(fecha,pred))
fecha <- Test$fecha
conteo_ordenes <- as.integer(predict_test$pred)
pred.data <- data.frame(fecha,conteo_ordenes)
rownames(pred.data) <- NULL
pred.data <- data.frame(fecha,conteo_ordenes)
Test$temptemp <- (Test$conteo_restaurantes)**2
predict_test <- Test
predict_test$pred <- pred
fecha <- Test$fecha
conteo_ordenes <- as.integer(predict_test$pred)
pred.data <- data.frame(fecha,conteo_ordenes)
rownames(pred.data) <- NULL
write.table(pred.data, file = "pred_Urdaneta_9.csv", sep = ",",qmethod = "double",row.names = FALSE)
modFit<- train(conteo_ordenes ~ cod_calendario+conteo_restaurantes+conte_temp+eventos_cod+temptemp,method = "rlm",data=Training)
print(modFit)
pred <- predict(modFit, Test)
predict_test <- Test
predict_test$pred <- pred
fecha <- Test$fecha
conteo_ordenes <- as.integer(predict_test$pred)
pred.data <- data.frame(fecha,conteo_ordenes)
rownames(pred.data) <- NULL
write.table(pred.data, file = "pred_Urdaneta_9.csv", sep = ",",qmethod = "double",row.names = FALSE)
write.table(pred.data, file = "pred_Urdaneta_9.csv", sep = ",",qmethod = "double",row.names = FALSE)
